{
  "permissions": {
    "allow": [
      "Bash(rm:*)",
      "Bash(npm run dev:*)",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_take_screenshot",
      "mcp__playwright__browser_click",
      "mcp__playwright__browser_evaluate",
      "Bash(find:*)",
      "Bash(sed:*)",
      "Bash(for:*)",
      "Bash(do)",
      "Bash(done)",
      "Bash(grep:*)",
      "Bash(mv:*)",
      "Bash(npm run build:*)",
      "Bash(npm install:*)",
      "mcp__sequential-thinking__sequentialthinking",
      "Bash(claude mcp)",
      "Bash(claude mcp:*)",
      "Bash(touch:*)",
      "Bash(mkdir:*)",
      "Bash(npx tsc:*)",
      "Bash(lsof:*)",
      "Bash(curl:*)",
      "Bash(git mv:*)",
      "Bash(git rm:*)",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "mcp__supabase__apply_migration",
      "mcp__supabase__get_project_url",
      "Bash(brew install:*)",
      "mcp__supabase__list_tables",
      "Bash(supabase:*)",
      "Bash(brew:*)",
      "Bash(npm view:*)",
      "Bash(pkill:*)",
      "mcp__supabase__get_anon_key",
      "Bash(npm cache clean:*)",
      "mcp__supabase__list_projects",
      "mcp__supabase__get_project",
      "mcp__supabase__execute_sql",
      "mcp__playwright__browser_snapshot",
      "mcp__playwright__browser_type",
      "mcp__playwright__browser_wait_for",
      "mcp__playwright__browser_network_requests",
      "mcp__context7__resolve-library-id",
      "mcp__context7__get-library-docs",
      "mcp__playwright__browser_tab_new",
      "Bash(tar:*)",
      "Bash(sudo mv:*)",
      "Bash(~/bin/supabase:*)",
      "mcp__playwright__browser_console_messages",
      "Bash(npx supabase migration:*)",
      "Bash(npx supabase:*)",
      "Bash(pip3 list:*)",
      "Bash(superclaude --help)",
      "Bash(superclaude --version)",
      "Bash(superclaude --interactive)",
      "Bash(npm uninstall:*)",
      "Bash(npx next build:*)",
      "WebSearch",
      "mcp__playwright__browser_close",
      "mcp__playwright__browser_install",
      "Bash(node:*)",
      "Bash(cp:*)",
      "Bash(npm run type-check:*)",
      "Bash(npm run:*)",
      "Bash(cat:*)",
      "Bash(npm outdated)",
      "Bash(npm search:*)",
      "Bash(npm info:*)",
      "mcp__supabase__get_logs",
      "WebFetch(domain:supabase.com)",
      "WebFetch(domain:github.com)",
      "mcp__playwright__browser_press_key",
      "mcp__supabase__deploy_edge_function",
      "mcp__supabase__list_edge_functions",
      "Bash(git restore:*)",
      "WebFetch(domain:lexical.dev)",
      "Bash(npm ls:*)",
      "mcp__playwright__browser_file_upload",
      "Read(//System/Library/**)",
      "mcp__playwright__browser_drag",
      "WebFetch(domain:raw.githubusercontent.com)",
      "WebFetch(domain:quill-resize-image.vercel.app)",
      "WebFetch(domain:www.npmjs.com)",
      "Bash(xargs sed:*)",
      "Bash(echo:*)",
      "Bash(npx @sentry/wizard:*)",
      "Bash(while read file)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(head:*)",
      "Bash(do if ! grep -q \"^[\"\"'''']use client[\"\"'''']\" \"$file\")",
      "Bash(then echo \"$file\")",
      "Bash(fi)",
      "Bash(timeout 30s npm run build)",
      "Bash(npm:*)",
      "Bash(npx next:*)",
      "Bash(top:*)",
      "Bash(timeout 30s npm run dev)",
      "Bash(timeout 20s npm run dev)",
      "Bash(wc:*)",
      "Bash(xargs:*)",
      "Bash(git checkout:*)",
      "Bash(ANALYZE_MODULES=true npm run dev)",
      "Bash(PORT=3001 npm run start)",
      "Bash(kill:*)",
      "Bash(do echo \"=== Test $i ===\")",
      "WebFetch(domain:quilljs.com)",
      "Bash(convert:*)",
      "WebFetch(domain:stackoverflow.com)",
      "Bash(git branch:*)",
      "WebFetch(domain:tanstack.com)",
      "WebFetch(domain:developers.kakao.com)",
      "Bash(git pull:*)",
      "Bash(do sed -i '' \"s|from ''@/shared/layout/MainLayout''|from ''@/shared/layout/ResponsiveLayout''|g\" \"$file\")",
      "Bash(do if [ -f \"$file\" ])",
      "Bash(then sed -i '' \"s|import { MainLayout } from ''@/shared/layout/ResponsiveLayout''|import { ResponsiveLayout } from ''@/shared/layout/ResponsiveLayout''|g\" \"$file\")",
      "Bash(traceroute:*)",
      "Bash(whois:*)",
      "Read(//tmp/**)",
      "Bash(ANALYZE=true npm run build)",
      "Bash(open .next/analyze/client.html)",
      "Bash(netlify:*)",
      "Bash(time curl:*)",
      "Bash(ping:*)",
      "Bash(do echo \"=== Request $i ===\")",
      "Bash(vercel project ls:*)",
      "Bash(nslookup:*)",
      "Bash(dig:*)"
    ],
    "deny": [],
    "defaultMode": "acceptEdits",
    "additionalDirectories": [
      "/opt/homebrew/lib/node_modules/superclaude/bin"
    ]
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "supabase"
  ]
}